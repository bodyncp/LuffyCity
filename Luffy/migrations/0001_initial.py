# Generated by Django 2.0.5 on 2018-06-25 11:53

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0009_alter_user_last_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('nid', models.AutoField(primary_key=True, serialize=False)),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('comment', models.TextField(verbose_name='评论内容')),
            ],
        ),
        migrations.CreateModel(
            name='Favor',
            fields=[
                ('nid', models.AutoField(primary_key=True, serialize=False)),
                ('isUp', models.BooleanField(verbose_name='点赞')),
            ],
        ),
        migrations.CreateModel(
            name='Module',
            fields=[
                ('nid', models.AutoField(primary_key=True, serialize=False)),
                ('module', models.CharField(max_length=32, verbose_name='模块名称')),
            ],
        ),
        migrations.CreateModel(
            name='Share',
            fields=[
                ('nid', models.AutoField(primary_key=True, serialize=False)),
                ('desc', models.CharField(max_length=64, verbose_name='分享描述')),
                ('content', models.TextField(verbose_name='分享内容')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('commentCount', models.IntegerField(verbose_name='评论数')),
            ],
        ),
        migrations.CreateModel(
            name='Summary',
            fields=[
                ('nid', models.AutoField(primary_key=True, serialize=False)),
                ('abstract', models.CharField(max_length=64, null=True, verbose_name='总结摘要')),
                ('today_content', models.TextField(default=1, verbose_name='今天内容')),
                ('tomorrow_content', models.TextField(default=1, verbose_name='明天计划')),
                ('code', models.IntegerField(default=1, verbose_name='代码量')),
                ('create_time', models.DateField(auto_now_add=True, verbose_name='创建时间')),
                ('complete', models.BooleanField(choices=[(0, 'no'), (1, 'yes')], default=0, verbose_name='是否完成任务')),
            ],
        ),
        migrations.CreateModel(
            name='Team',
            fields=[
                ('nid', models.AutoField(primary_key=True, serialize=False)),
                ('team_name', models.CharField(max_length=16, verbose_name='小组名称')),
            ],
        ),
        migrations.CreateModel(
            name='Types',
            fields=[
                ('nid', models.AutoField(primary_key=True, serialize=False)),
                ('classify', models.CharField(max_length=12, verbose_name='总结分类')),
            ],
        ),
        migrations.CreateModel(
            name='UrlShare',
            fields=[
                ('nid', models.AutoField(primary_key=True, serialize=False)),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('title', models.CharField(default='xx', max_length=20, verbose_name='博客概要')),
                ('desc', models.TextField(verbose_name='博客知识点概要')),
                ('url', models.URLField(verbose_name='分享博客地址')),
                ('isFavor', models.IntegerField(verbose_name='点赞数')),
            ],
        ),
        migrations.CreateModel(
            name='UserInfo',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('nid', models.AutoField(primary_key=True, serialize=False)),
                ('phone', models.CharField(max_length=11, null=True, verbose_name='学员电话')),
                ('signature', models.CharField(default='如果你有理想的话,就努力去实现', max_length=32, verbose_name='签名')),
                ('gender', models.IntegerField(choices=[(1, '男'), (2, '女')], default=1, verbose_name='用户性别')),
                ('addr', models.CharField(max_length=16, null=True, verbose_name='用户地址')),
                ('head_image', models.FileField(default='Head/default.png', upload_to='Head/', verbose_name='用户头像')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('url', models.URLField(null=True, verbose_name='博客地址')),
                ('status', models.BooleanField(default=1)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('modules', models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='Luffy.Module', verbose_name='所属模块')),
                ('teams', models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='Luffy.Team', verbose_name='所属小组')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.AddField(
            model_name='urlshare',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='summary',
            name='types',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='Luffy.Types', verbose_name='总结类型'),
        ),
        migrations.AddField(
            model_name='summary',
            name='user',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL, verbose_name='所属学员'),
        ),
        migrations.AddField(
            model_name='share',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL, verbose_name='所属学员'),
        ),
        migrations.AddField(
            model_name='favor',
            name='url',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='Luffy.UrlShare'),
        ),
        migrations.AddField(
            model_name='favor',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='comment',
            name='share',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='Luffy.Share'),
        ),
        migrations.AddField(
            model_name='comment',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL),
        ),
    ]
